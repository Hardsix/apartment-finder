{
  "info": {
    "_postman_id": "36062910-2964-40aa-bf15-14fb70bd0619",
    "name": "apartment-finder",
    "description": "apartment-finder setup and workflow collection\nUse with matching apartment-finder environment export\n\nWhen setting up for the first time, run in this order:\n- everything in tpaga folder UP TO \"Create merchant bridge\", inclusive\n- everything in giros folder UP TO \"Get merchant access token\", inclusive",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Update bridge references",
      "item": [
        {
          "name": "Update merchant wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n        \"bridgeConfig\": {\n            \"baseUrl\": \"{{bridgeUrl}}/v2/bridges/merchant\",\n            \"supportedStatuses\": [\"INITIALIZING\", \"PENDING\", \"COMPLETED\", \"REJECTED\", \"ERROR\"]\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet/{{merchantHandle}}",
              "host": ["{{url}}"],
              "path": ["v1", "wallet", "{{merchantHandle}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update tpaga wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{tpagaClientApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{tpagaAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n        \"bridgeConfig\": {\n            \"baseUrl\": \"{{bridgeUrl}}/v2/bridges/tpaga\",\n            \"supportedStatuses\": [\"INITIALIZING\"]\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet/$tpaga",
              "host": ["{{url}}"],
              "path": ["v1", "wallet", "$tpaga"]
            }
          },
          "response": []
        },
        {
          "name": "Update merchant bridge",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"endpoints\": {\n        \"transfers\": {\n            \"flowName\": \"sync-adapter.cashout.initiate\",\n            \"async\": false\n        },\n        \"transfers/:transferId/:action\": {\n            \"flowName\": \"sync-adapter.cashout.${params.action}\",\n            \"async\": false\n        },\n        \"debit\": {\n            \"flowName\": \"merchant.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"merchant.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"merchant.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"merchant.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"merchant.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"merchant.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"merchant.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant",
              "host": ["{{url}}"],
              "path": ["v2", "bridges", "merchant"]
            }
          },
          "response": []
        },
        {
          "name": "Update tpaga bridge",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"config\": {\n        \"credentialsHandle\": \"$tpaga\"\n    },\n    \"endpoints\": {\n        \"debit\": {\n            \"flowName\": \"tpaga.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"tpaga.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"tpaga.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"tpaga.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"tpaga.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"tpaga.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"tpaga.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v2/bridges/tpaga",
              "host": ["{{url}}"],
              "path": ["v2", "bridges", "tpaga"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tpaga",
      "item": [
        {
          "name": "Get Minka access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"minka-accessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{minka-clientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{minka-clientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create domain",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"handle\": \"carvajal\",\n  \"router\": \"carvajal\",\n  \"labels\":{}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/domain",
              "host": ["{{url}}"],
              "path": ["v1", "domain"]
            }
          },
          "response": []
        },
        {
          "name": "Create currency signer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderCurrencySigner\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"labels\":{\n\t   \"type\": \"SYMBOL\"\n\t}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/signer",
              "host": ["{{url}}"],
              "path": ["v1", "signer"]
            }
          },
          "response": []
        },
        {
          "name": "Create currency wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderCCWalletHandle\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"handle\": \"$cc\",\n    \"labels\": {\n      \"type\": \"SYMBOL\"\n    },\n    \"default\": \"{{apartment-finderCurrencySigner}}\",\n    \"signer\": [\"{{apartment-finderCurrencySigner}}\"]\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet/",
              "host": ["{{url}}"],
              "path": ["v1", "wallet", ""]
            }
          },
          "response": []
        },
        {
          "name": "Create apartment-finder credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderClientId\", jsonData.client_id);",
                  "pm.environment.set(\"apartment-finderClientSecret\", jsonData.client_secret);",
                  "pm.environment.set(\"apartment-finderApiKey\", jsonData.api_key);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$apartment-finder\",\n    \"_auth\": {\n        \"owner\": \"$apartment-finder\",\n        \"domain\": \"carvajal\",\n        \"organization\": \"$apartment-finder\",\n        \"realm\": \"organization\"\n    },\n    \"scopes\": [\n        \"manage_organization_credentials\",\n        \"manage_own_resources\"\n    ]\n}"
            },
            "url": {
              "raw": "{{url}}/oauth/",
              "host": ["{{url}}"],
              "path": ["oauth", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get apartment-finder access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{apartment-finderClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{apartment-finderClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create apartment-finder troupe signer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderTroupeSigner\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n        \"type\": \"TROUPE\",\n        \"routerReference\": \"$apartment-finder\",\n        \"source\": \"vault\",\n        \"sourceRef\": \"some-vault-path-uuid\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/signer",
              "host": ["{{url}}"],
              "path": ["v1", "signer"]
            }
          },
          "response": []
        },
        {
          "name": "Create apartment-finder wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$apartment-finder\",\n    \"labels\": {\n        \"type\": \"TROUPE\"\n    },\n    \"default\": \"{{apartment-finderTroupeSigner}}\",\n    \"signer\": [\"{{apartment-finderTroupeSigner}}\"]\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet/",
              "host": ["{{url}}"],
              "path": ["v1", "wallet", ""]
            }
          },
          "response": []
        },
        {
          "name": "Issue to apartment-finder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderIssueActionId\", jsonData.action_id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"{{apartment-finderCCWalletHandle}}\",\n    \"target\": \"$apartment-finder\",\n    \"amount\": \"1000000\",\n    \"symbol\": \"{{apartment-finderCCWalletHandle}}\",\n    \"labels\": {\n    \t\"type\": \"ISSUE\",\n        \"domain\": \"carvajal\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action",
              "host": ["{{url}}"],
              "path": ["v1", "action"]
            }
          },
          "response": []
        },
        {
          "name": "Sign issue to apartment-finder",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"labels\": {}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action/{{apartment-finderIssueActionId}}/signed",
              "host": ["{{url}}"],
              "path": ["v1", "action", "{{apartment-finderIssueActionId}}", "signed"]
            }
          },
          "response": []
        },
        {
          "name": "Create tpaga credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"tpagaClientId\", jsonData.client_id);",
                  "pm.environment.set(\"tpagaClientSecret\", jsonData.client_secret);",
                  "pm.environment.set(\"tpagaClientApiKey\", jsonData.api_key);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$tpaga\",\n    \"_auth\": {\n        \"owner\": \"$tpaga\",\n        \"domain\": \"carvajal\",\n        \"organization\": \"$tpaga\",\n        \"realm\": \"user\"\n    },\n    \"scopes\": [\n        \"manage_own_resources\"\n    ]\n}"
            },
            "url": {
              "raw": "{{url}}/oauth/",
              "host": ["{{url}}"],
              "path": ["oauth", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get tpaga access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"tpagaAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{tpagaClientApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{tpagaClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{tpagaClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create tpaga troupe signer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"tpagaTroupeSigner\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{tpagaClientApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{tpagaAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n      \"type\": \"TROUPE\",\n      \"description\": \"tpaga bank limit account\",\n      \"routerReference\": \"$tpaga\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/signer",
              "host": ["{{url}}"],
              "path": ["v1", "signer"]
            }
          },
          "response": []
        },
        {
          "name": "Create tpaga wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{tpagaClientApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{tpagaAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$tpaga\",\n    \"signer\": [\"{{tpagaTroupeSigner}}\"],\n    \"default\": \"{{tpagaTroupeSigner}}\",\n    \"labels\": {\n        \"type\": \"TROUPE\",\n        \"bridgeConfig\": {\n            \"baseUrl\": \"{{bridgeUrl}}/v2/bridges/tpaga\",\n            \"supportedStatuses\": [\"INITIALIZING\"]\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet",
              "host": ["{{url}}"],
              "path": ["v1", "wallet"]
            }
          },
          "response": []
        },
        {
          "name": "Create merchant credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"merchantClientId\", jsonData.client_id);",
                  "pm.environment.set(\"merchantClientSecret\", jsonData.client_secret);",
                  "pm.environment.set(\"merchantClientApiKey\", jsonData.api_key);",
                  "pm.environment.set(\"merchantHandle\", \"$jose\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$jose\",\n    \"_auth\": {\n        \"owner\": \"$jose\",\n        \"domain\": \"carvajal\",\n        \"organization\": \"$jose\",\n        \"realm\": \"organization\"\n    },\n    \"scopes\": [\n        \"manage_own_resources\"\n    ]\n}"
            },
            "url": {
              "raw": "{{url}}/oauth",
              "host": ["{{url}}"],
              "path": ["oauth"]
            }
          },
          "response": []
        },
        {
          "name": "Get merchant access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"merchantAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{merchantClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{merchantClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create merchant troupe signer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"merchantTroupeSigner\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n      \"type\": \"MERCHANT\",\n      \"description\": \"jose tpaga account\",\n      \"routerReference\": \"{{merchantHandle}}\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/signer",
              "host": ["{{url}}"],
              "path": ["v1", "signer"]
            }
          },
          "response": []
        },
        {
          "name": "Create merchant wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"{{merchantHandle}}\",\n    \"signer\": [\"{{merchantTroupeSigner}}\"],\n    \"default\": \"{{merchantTroupeSigner}}\",\n    \"labels\": {\n        \"type\": \"MERCHANT\",\n        \"bridgeConfig\": {\n            \"baseUrl\": \"{{bridgeUrl}}/v2/bridges/merchant\",\n            \"supportedStatuses\": [\"INITIALIZING\", \"PENDING\", \"COMPLETED\", \"REJECTED\", \"ERROR\"]\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet/",
              "host": ["{{url}}"],
              "path": ["v1", "wallet", ""]
            }
          },
          "response": []
        },
        {
          "name": "Top up tpaga",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"tpagaTopupActionId\", jsonData.action_id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"$apartment-finder\",\n    \"target\": \"$tpaga\",\n    \"amount\": \"10000\",\n    \"symbol\": \"{{apartment-finderCCWalletHandle}}\",\n    \"labels\": {\n    \t\"type\": \"TOPUP\",\n        \"domain\": \"carvajal\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action",
              "host": ["{{url}}"],
              "path": ["v1", "action"]
            }
          },
          "response": []
        },
        {
          "name": "Sign tpaga topup",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"labels\": {}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action/{{tpagaTopupActionId}}/signed",
              "host": ["{{url}}"],
              "path": ["v1", "action", "{{tpagaTopupActionId}}", "signed"]
            }
          },
          "response": []
        },
        {
          "name": "Top up merchant",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"merchantTopupActionId\", jsonData.action_id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"$apartment-finder\",\n    \"target\": \"{{merchantHandle}}\",\n    \"amount\": \"10000\",\n    \"symbol\": \"{{apartment-finderCCWalletHandle}}\",\n    \"labels\": {\n    \t\"type\": \"TOPUP\",\n        \"domain\": \"carvajal\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action",
              "host": ["{{url}}"],
              "path": ["v1", "action"]
            }
          },
          "response": []
        },
        {
          "name": "Sign merchant topup",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"labels\": {}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action/{{merchantTopupActionId}}/signed",
              "host": ["{{url}}"],
              "path": ["v1", "action", "{{merchantTopupActionId}}", "signed"]
            }
          },
          "response": []
        },
        {
          "name": "Create tpaga bridge",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"tpaga\",\n    \"config\": {\n        \"credentialsHandle\": \"$tpaga\"\n    },\n    \"endpoints\": {\n        \"debit\": {\n            \"flowName\": \"tpaga.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"tpaga.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"tpaga.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"tpaga.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"tpaga.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"tpaga.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"tpaga.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v2/bridges",
              "host": ["{{url}}"],
              "path": ["v2", "bridges"]
            }
          },
          "response": []
        },
        {
          "name": "Create merchant bridge",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"merchant\",\n    \"endpoints\": {\n        \"transfers\": {\n            \"flowName\": \"sync-adapter.cashout.initiate\",\n            \"async\": false\n        },\n        \"transfers/cashin/:transferId/:action\": {\n            \"flowName\": \"sync-adapter.cashout.${params.action}\",\n            \"async\": false\n        },\n        \"debit\": {\n            \"flowName\": \"merchant.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"merchant.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"merchant.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"merchant.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"merchant.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"merchant.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"merchant.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v2/bridges",
              "host": ["{{url}}"],
              "path": ["v2", "bridges"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger async CASHOUT flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"cashoutTxRef\", jsonData.txRef);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"$123456990\",\n\t\"target\": \"$123456990\",\n    \"symbol\": \"$cc\",\n\t\"labels\": {\n        \"type\": \"apartment-finder.CASHOUT\",\n        \"domain\": \"carvajal\",\n        \"otp\": \"2453\",\n        \"service\": \"$tpaga\"\n\t}\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/transfers",
              "host": ["{{url}}"],
              "path": ["v2", "transfers"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"cashoutTxRef\", jsonData.txRef);",
                  "pm.environment.set(\"cashoutTxId\", jsonData.transferId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"$12345678\",\n\t\"target\": \"$12345678\",\n    \"symbol\": \"$cc\",\n\t\"labels\": {\n        \"type\": \"apartment-finder.CASHOUT\",\n        \"domain\": \"carvajal\",\n        \"otp\": \"5205182\",\n        \"service\": \"$tpaga\"\n\t}\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers",
              "host": ["{{url}}"],
              "path": ["v2", "bridges", "merchant", "transfers"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT accept",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/{{cashoutTxId}}/accept",
              "host": ["{{url}}"],
              "path": [
                "v2",
                "bridges",
                "merchant",
                "transfers",
                "{{cashoutTxId}}",
                "accept"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get transfer status",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{url}}/v2/transfers/{{cashoutTxId}}",
              "host": ["{{url}}"],
              "path": ["v2", "transfers", "{{cashoutTxId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT reject",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/{{cashoutTxId}}/reject",
              "host": ["{{url}}"],
              "path": [
                "v2",
                "bridges",
                "merchant",
                "transfers",
                "{{cashoutTxId}}",
                "reject"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Giros",
      "item": [
        {
          "name": "Get Minka access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"minka-accessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{minka-clientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{minka-clientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create giros bridge",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"giros\",\n    \"config\": {\n        \"credentialsHandle\": \"$giros\"\n    },\n    \"endpoints\": {\n        \"debit\": {\n            \"flowName\": \"giros.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"giros.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"giros.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"giros.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"giros.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"giros.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"giros.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v2/bridges",
              "host": ["{{url}}"],
              "path": ["v2", "bridges"]
            }
          },
          "response": []
        },
        {
          "name": "Create giros credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosClientId\", jsonData.client_id);",
                  "pm.environment.set(\"girosClientSecret\", jsonData.client_secret);",
                  "pm.environment.set(\"girosClientApiKey\", jsonData.api_key);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$giros\",\n    \"_auth\": {\n        \"owner\": \"$giros\",\n        \"domain\": \"carvajal\",\n        \"organization\": \"$giros\",\n        \"realm\": \"user\"\n    },\n    \"scopes\": [\n        \"manage_own_resources\"\n    ]\n}"
            },
            "url": {
              "raw": "{{url}}/oauth/",
              "host": ["{{url}}"],
              "path": ["oauth", ""]
            }
          },
          "response": []
        },
        {
          "name": "Get giros access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{girosClientApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{girosClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{girosClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Create giros troupe signer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosTroupeSigner\", jsonData.handle);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{girosClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{girosAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"labels\": {\n      \"type\": \"TROUPE\",\n      \"description\": \"giros bank limit account\",\n      \"routerReference\": \"$giros\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/signer",
              "host": ["{{url}}"],
              "path": ["v1", "signer"]
            }
          },
          "response": []
        },
        {
          "name": "Create giros wallet",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{girosClientApiKey}}",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{girosAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"$giros\",\n    \"signer\": [\"{{girosTroupeSigner}}\"],\n    \"default\": \"{{girosTroupeSigner}}\",\n    \"labels\": {\n        \"type\": \"TROUPE\",\n        \"bridgeConfig\": {\n            \"baseUrl\": \"{{bridgeUrl}}/v2/bridges/giros\",\n            \"supportedStatuses\": [\"INITIALIZING\"]\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/wallet",
              "host": ["{{url}}"],
              "path": ["v1", "wallet"]
            }
          },
          "response": []
        },
        {
          "name": "Get apartment-finder access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"apartment-finderAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{apartment-finderClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{apartment-finderClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Top up giros",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosTopupActionId\", jsonData.action_id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{apartment-finderAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"source\": \"$apartment-finder\",\n    \"target\": \"$giros\",\n    \"amount\": \"10000\",\n    \"symbol\": \"{{apartment-finderCCWalletHandle}}\",\n    \"labels\": {\n    \t\"type\": \"TOPUP\",\n        \"domain\": \"carvajal\"\n    }\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action",
              "host": ["{{url}}"],
              "path": ["v1", "action"]
            }
          },
          "response": []
        },
        {
          "name": "Sign giros topup",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{apartment-finderApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{apartment-finderAccessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"labels\": {}\n}"
            },
            "url": {
              "raw": "{{url}}/v1/action/{{girosTopupActionId}}/signed",
              "host": ["{{url}}"],
              "path": ["v1", "action", "{{girosTopupActionId}}", "signed"]
            }
          },
          "response": []
        },
        {
          "name": "Update merchant bridge cashin",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{minka-apiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{minka-accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"handle\": \"merchant\",\n    \"endpoints\": {\n        \"transfers\": {\n            \"flowName\": \"sync-adapter.cashout.initiate\",\n            \"async\": false\n        },\n        \"transfers/:transferId/:action\": {\n            \"flowName\": \"sync-adapter.cashout.${params.action}\",\n            \"async\": false\n        },\n        \"transfers/cashin\": {\n            \"flowName\": \"sync-adapter.cashin.initiate\",\n            \"async\": false\n        },\n        \"transfers/cashin/:transferId/:action\": {\n            \"flowName\": \"sync-adapter.cashin.${params.action}\",\n            \"async\": false\n        },\n        \"debit\": {\n            \"flowName\": \"merchant.debit\",\n            \"async\": true\n        },\n        \"debit/reverse\": {\n            \"flowName\": \"merchant.debit.reverse\",\n            \"async\": true\n        },\n        \"credit\": {\n            \"flowName\": \"merchant.credit\",\n            \"async\": true\n        },\n        \"credit/reverse\": {\n            \"flowName\": \"merchant.credit.reverse\",\n            \"async\": true\n        },\n        \"action\": {\n            \"flowName\": \"merchant.action\",\n            \"async\": true\n        },\n        \"action/reverse\": {\n            \"flowName\": \"merchant.action.reverse\",\n            \"async\": true\n        },\n        \"status\": {\n            \"flowName\": \"merchant.status.${body.labels.status}\",\n            \"async\": true\n        }\n    }\n}"
            },
            "url": {
              "raw": "localhost/v2/bridges/merchant",
              "host": ["localhost"],
              "path": ["v2", "bridges", "merchant"]
            }
          },
          "response": []
        },
        {
          "name": "Get merchant access token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"merchantAccessToken\", jsonData.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "{{merchantClientId}}",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "{{merchantClientSecret}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{url}}/oauth/token",
              "host": ["{{url}}"],
              "path": ["oauth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosCashoutTxRef\", jsonData.txRef);",
                  "pm.environment.set(\"girosCashoutTxId\", jsonData.transferId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"source\": \"$12345678\",\n  \"target\": \"$12345678\",\n  \"symbol\": \"$cc\",\n  \"labels\": {\n    \"type\": \"apartment-finder.CASHOUT\",\n    \"domain\": \"carvajal\",\n    \"otp\": \"090400\",\n    \"service\": \"$giros\",\n    \n    \"contextTransaction\": {\n      \"idTx\": \"211a6e1d-2db1-40c8-b91e-adrianfin1\",\n      \"idUser\": \"MHURTADO\",\n      \"idConsumer\": \"APP\",\n      \"idService\": \"APPSAF\",\n      \"codTypeTx\": \"SAF\"\n    },\n    \"agent\": {\n      \"id\": \"GYF001\",\n      \"office\": {\n        \"id\": \"274\",\n        \"servicePoint\": {\n          \"id\": \"274\",\n          \"device\": {\n            \"id\": \"1\"\n          }\n        }\n      }\n    },\n    \"customer\": {\n      \"id\": \"1122558833\",\n      \"typeIdentification\": \"CC\"\n    },\n    \"merchantIP\": \"10.10.10.10\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers",
              "host": ["{{url}}"],
              "path": ["v2", "bridges", "merchant", "transfers"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT accept",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/{{girosCashoutTxId}}/accept",
              "host": ["{{url}}"],
              "path": [
                "v2",
                "bridges",
                "merchant",
                "transfers",
                "{{girosCashoutTxId}}",
                "accept"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHOUT reject",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/{{cashoutTxId}}/reject",
              "host": ["{{url}}"],
              "path": [
                "v2",
                "bridges",
                "merchant",
                "transfers",
                "{{cashoutTxId}}",
                "reject"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get transfer status",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{merchantAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{url}}/v2/transfers/{{cashoutTxId}}",
              "host": ["{{url}}"],
              "path": ["v2", "transfers", "{{cashoutTxId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHIN flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.environment.set(\"girosCashinTxRef\", jsonData.txRef);",
                  "pm.environment.set(\"girosCashinTxId\", jsonData.transferId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"source\": \"$12345678\",\n  \"target\": \"$12345678\",\n  \"symbol\": \"$cc\",\n  \"labels\": {\n    \"type\": \"apartment-finder.CASHOUT\",\n    \"domain\": \"carvajal\",\n    \"otp\": \"2205182\",\n    \"service\": \"$giros\",\n    \n    \"contextTransaction\": {\n      \"idTx\": \"211a6e1d-2db1-40c8-b91e-adrianfin1\",\n      \"idUser\": \"MHURTADO\",\n      \"idConsumer\": \"APP\",\n      \"idService\": \"APPSAF\",\n      \"codTypeTx\": \"SAF\"\n    },\n    \"agent\": {\n      \"id\": \"GYF001\",\n      \"office\": {\n        \"id\": \"274\",\n        \"servicePoint\": {\n          \"id\": \"274\",\n          \"device\": {\n            \"id\": \"1\"\n          }\n        }\n      }\n    },\n    \"customer\": {\n      \"id\": \"1122558833\",\n      \"typeIdentification\": \"CC\"\n    },\n    \"merchantIP\": \"10.10.10.10\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/cashin",
              "host": ["{{url}}"],
              "path": ["v2", "bridges", "merchant", "transfers", "cashin"]
            }
          },
          "response": []
        },
        {
          "name": "Trigger sync CASHIN accept",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [""],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              },
              {
                "key": "x-api-key",
                "value": "{{merchantClientApiKey}}"
              },
              {
                "key": "Authorization",
                "type": "text",
                "value": "Bearer {{merchantAccessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{url}}/v2/bridges/merchant/transfers/cashin/{{girosCashinTxId}}/accept",
              "host": ["{{url}}"],
              "path": [
                "v2",
                "bridges",
                "merchant",
                "transfers",
                "cashin",
                "{{girosCashinTxId}}",
                "accept"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Gyf API",
      "item": [
        {
          "name": "findTransactionSAF - pay",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"contextTransaction\": {\n        \"idTx\": \"211a6e1d-2db1-40c8-b91e-adrianfind1\",\n        \"idUser\": \"JCORONADO\",\n        \"idConsumer\": \"APPSAF\",\n        \"idService\": \"APPSAF\",\n        \"codTypeTx\": \"SAF\"\n    },\n    \"agent\": {\n        \"id\": \"GYF001\",\n        \"office\": {\n            \"id\": \"274\",\n            \"servicePoint\": {\n                \"id\": \"274\",\n                \"device\": {\n                    \"id\": \"1\"\n                }\n            }\n        }\n    },\n    \"customer\": {\n        \"id\": \"1166448899\", \n        \"typeIdentification\": \"CC\"\n    },\n    \"moneyTransfer\": {\n        \"pin\": \"229260\",\n        \"phase\": \"RELEASE\"\n    },\n    \"ipAddress\": \"10.10.10.10\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{girosApiUrl}}/unifierSAFApi/findTransactionSAF",
              "host": ["{{girosApiUrl}}"],
              "path": ["unifierSAFApi", "findTransactionSAF"]
            }
          },
          "response": []
        },
        {
          "name": "sendMoneyTransactionSAF",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contextTransaction\": {\n    \"idTx\": \"739c49f2-8c8a-4ac7-8086-d01f8a786af9\",\n    \"idUser\": \"JCORONADO\",\n    \"idConsumer\": \"APPSAF\",\n    \"idService\": \"APPSAF\",\n    \"codTypeTx\": \"EGI_SAF\"\n  },\n  \"agent\": {\n    \"id\": \"GYF001\",\n    \"office\": {\n      \"id\": \"274\",\n      \"servicePoint\": {\n        \"id\": \"274\",\n        \"device\": {\n          \"id\": \"1\"\n        }\n      }\n    }\n  },\n  \"sendMoneyTransfer\": {\n    \"valueAdditionalServicesCOP\": 0,\n    \"transactionDate\": null,\n    \"baseCurrencyIVA\": 0,\n    \"commissionIVA\": 10260,\n    \"currencyIVA\": 0,\n    \"differenceRate\": 0,\n    \"otherServicesIVA\": 0,\n    \"otherServicesIVAGYF\": 0,\n    \"additionalRate1\": 0,\n    \"additionalRate2\": 0,\n    \"totalValue\": 69280,\n    \"totalValueBeforeTax\": 59000,\n    \"totalValueTax\": 10280,\n    \"valueServicesMailNotificationGYF\": 0,\n    \"valueServicesSMSNotificationGYF\": 0,\n    \"agencyId\": null,\n    \"cashierCode\": null,\n    \"cashValueUSD\": \"1.7\",\n    \"cashValueCOP\": \"5000\",\n    \"valGMF\": \"20\",\n    \"commerceRepresentativeRate\": 3550.32,\n    \"averageBuyRate\": 9999,\n    \"salesRate\": 2943.01,\n    \"sendDate\": null,\n    \"broker\": null,\n    \"fundsTarget\": null,\n    \"kinshipBeneficiary\": null,\n    \"detailActivity\": null,\n    \"reasonShipping\": null,\n    \"numeralExchange\": \"2040\",\n    \"commission\": \"54000\",\n    \"testQuestionSet\": \"NO\",\n    \"methodOfPayment\": null,\n    \"customer\": {\n      \"id\": \"1144556778\",\n      \"codTypeIdentification\": \"CC\",\n      \"valNameType\": \"D\",\n      \"valFirstName\": \"manuel\",\n      \"valMiddleName\": \"\",\n      \"valLastName\": \"hurtado\",\n      \"valMiddleLastName\": \"\",\n      \"valGender\": \"M\",\n      \"dateOfBirth\": \"19900101\",\n      \"age\": null,\n      \"valBirthPlace\": \"76001\",\n      \"valPhone\": \"3166331111\",\n      \"valMobile\": \"3166331111\",\n      \"valEmail\": \"notengo@gmail.com\",\n      \"valNationality\": \"CO\",\n      \"valCountry\": null,\n      \"valState\": null,\n      \"valCity\": null,\n      \"valCurrentLocationZIP\": null,\n      \"valResidencePlace\": \"76001\",\n      \"valAddress\": \"KR 3  No. 1-2\",\n      \"codState\": null,\n      \"codMobileCountry\": null,\n      \"valSMSFlag\": null,\n      \"valEstratum\": null,\n      \"countryName\": null,\n      \"desCity\": null,\n      \"phoneCityCode\": null,\n      \"phoneCountryCode\": null,\n      \"valMaritalStatus\": null,\n      \"codTypeCustomer\": null,\n      \"valOccupation\": \"\",\n      \"valOcupationLevel\": \"\",\n      \"valJob\": \"\",\n      \"codEconomicActivity\": \"\",\n      \"valIncome\": null,\n      \"valExpenses\": null,\n      \"valOtherIncome\": null,\n      \"valAssets\": null,\n      \"valPassive\": null,\n      \"codDestinationOfFundsEconomic\": null,\n      \"valOtherIncomeDescription\": null,\n      \"valCompanyName\": null,\n      \"valCompanyAddress\": null,\n      \"valCompanyPhone\": null,\n      \"valCompanyFax\": null,\n      \"valCompanyCity\": null,\n      \"valComplianceComment\": null,\n      \"valDesirePrivacyPolicy\": null,\n      \"idCountryOfIssue\": null,\n      \"idExpiryDate\": null,\n      \"idIssueDate\": null,\n      \"valLocalDeliveryArea\": null,\n      \"valSentBy\": null,\n      \"valSharePersonalData\": null,\n      \"valSecondIDNo\": null,\n      \"valLinkingDate\": null,\n      \"valLinkingAgency\": null,\n      \"fecLastUpdate\": null,\n      \"fecEnroll\": null,\n      \"enrold\": false,\n      \"valPep\": null,\n      \"valCityWork\": null,\n      \"flagReceiver\": null,\n      \"foundsOrigin\": null,\n      \"havePhoneNumber\": \"Y\",\n      \"idIssue\": \"CO\",\n      \"doesIdExpire\": \"N\",\n      \"idIssueExpirationDate\": null,\n      \"countryOfBirth\": \"Colombia\",\n      \"ackFlag\": null\n    },\n    \"customerCompany\": null,\n    \"moneyTransfer\": {\n      \"expectedPayoutLocationStateCode\": \"DF-DISTRITO FEDERAL\",\n      \"tolls\": null,\n      \"fixOnSend\": null,\n      \"messageCharge\": \"54000\",\n      \"originatorsPrincipalAmount\": \"5000\",\n      \"paymentType\": \"Cash\",\n      \"phoneDeliveryAvailable\": null,\n      \"testQuestionAvailable\": \"\",\n      \"transactionType\": \"WMN\",\n      \"codeDeliveryService\": \"000\",\n      \"destinationPrincipalAmount\": \"30\",\n      \"expectedPayoutLocationCity\": \"406-DISTRITO FEDERAL\",\n      \"canadianDollarExchangeFee\": null,\n      \"valAcknowledgeFlag\": null,\n      \"valAddAgentDefinedData\": [],\n      \"valAddCheckAmount\": null,\n      \"valAddCheckCashedFlag\": null,\n      \"valAddCheckNo\": null,\n      \"valAddComplianceDataBuffer\": null,\n      \"valAddComplianceFlagBuffer\": null,\n      \"valAddMessage\": null,\n      \"valAddressvalIdatedByAgent\": null,\n      \"valAddressVerificationDocumentIssueDate\": null,\n      \"valAdntlPayeeInfoBuff\": null,\n      \"valAnswer\": null,\n      \"valArizonaOperatorFirstName\": null,\n      \"valArizonaOperatorLastName\": null,\n      \"valArizonaOperatorMaternalName\": null,\n      \"valArizonaOperatorPaternalName\": null,\n      \"valComplianceDataBuffer\": null,\n      \"valComplianceFlagBuffer\": null,\n      \"valCountryOfResidence\": null,\n      \"valCountyTax\": \"0\",\n      \"valCurrentFX\": null,\n      \"codCustomerTypeAlpha\": null,\n      \"codCustomerTypeNumeric\": null,\n      \"valDestinationCountry\": null,\n      \"valDestinationState\": null,\n      \"valDestinationCity\": null,\n      \"codDestinationCurrency\": null,\n      \"valComplianceComment\": null,\n      \"valDestinationCurrency\": null,\n      \"valNumeralExchange\": null,\n      \"valPaidDateTime\": null,\n      \"valPayAmount\": null,\n      \"valRateExchange\": \".0059465\",\n      \"valTaxWorksheet\": null,\n      \"valExpectedActualPayout\": null,\n      \"valFathersName\": null,\n      \"dateFiling\": \"05-18\",\n      \"timeFiling\": \"\",\n      \"codFiscal\": null,\n      \"valFormSerialNumber\": null,\n      \"valHasId\": null,\n      \"valHasPhoneNumber\": null,\n      \"descId\": null,\n      \"descIdType\": null,\n      \"valIdPlaceOfIssue\": null,\n      \"valLocation\": null,\n      \"valLoyaltyCardUpdateIndicator\": null,\n      \"idMTCN\": \"9449069161\",\n      \"valMemberOrAssociateToGovernment\": null,\n      \"valMessage\": \"\",\n      \"valMoneyTransferCategory\": null,\n      \"idMoneyTransferKey\": null,\n      \"valMunicipalTax\": \"0.00\",\n      \"valNewMTCN\": \"9449069161\",\n      \"valNorwegian\": null,\n      \"valNumberMatches\": null,\n      \"valNumberMessageLines\": null,\n      \"valOperatorComment\": null,\n      \"valOriginalDestinationCountry\": \"MX\",\n      \"valOriginalDestinationCurrency\": \"MXN\",\n      \"valOriginatingCityLocale\": null,\n      \"valOriginatingCountry\": \"CO\",\n      \"valOriginatingState\": null,\n      \"codOriginatingCurrency\": \"COP\",\n      \"valPayIndicator\": null,\n      \"descPayStatus\": null,\n      \"valPayWithoutIDIndicator\": null,\n      \"valPayoutCountry\": null,\n      \"valPayoutCurrency\": null,\n      \"valPlaceOfBirth\": null,\n      \"valPlusCharges\": \"0\",\n      \"valPreferredCustomerNo\": null,\n      \"valPrincipal\": null,\n      \"valPromoMessageSet1\": null,\n      \"valPromotionDiscountAmount\": null,\n      \"valPromotionName\": null,\n      \"valPromotionSequenceNo\": null,\n      \"valProofOfEUCitizenship\": null,\n      \"valReasonForAlternativeID\": null,\n      \"valReceiverSMSFlag\": null,\n      \"valRemittanceTradeRelated\": null,\n      \"valReprintFlag\": null,\n      \"valResidentOfOriginCountry\": null,\n      \"valSearchParametersBuffer\": null,\n      \"valSecondIDCountryOfIssue\": null,\n      \"valSecondIDType\": null,\n      \"valSenderSMSFlag\": null,\n      \"valSourceIPAddress\": null,\n      \"valSourceIPPort\": null,\n      \"valSourceOfFunds\": null,\n      \"valStateTax\": \"0.00\",\n      \"valTemplateID\": null,\n      \"valTestQuestion\": null,\n      \"valTestQuestionResponse\": null,\n      \"valThirdIdNumber\": null,\n      \"valThirdPartyAmount\": null,\n      \"valThirdPartyCity\": null,\n      \"valThirdPartyCompanyName\": null,\n      \"valThirdPartyCountry\": null,\n      \"valThirdPartyFX\": null,\n      \"valThirdPartyFirstName\": null,\n      \"valThirdPartyFlagPay\": null,\n      \"valThirdPartyID\": null,\n      \"valThirdPartyIDCountryOfIssue\": null,\n      \"valThirdPartyIDType\": null,\n      \"valTransactionReason\": null,\n      \"valValutaAmount\": null,\n      \"codValuta\": null,\n      \"valWasResidentPermitProvided\": null,\n      \"valGross\": \"59000\",\n      \"valCharges\": \"\",\n      \"valChargesBuffer\": null,\n      \"valMISCBuffer\": null,\n      \"valForeignExchangeRate\": null,\n      \"valForeignSystemReferenceNo\": \"1589817087889\",\n      \"thirdPartySender\": null,\n      \"sender\": {\n        \"id\": \"1144556778\",\n        \"codTypeIdentification\": \"CC\",\n        \"valNameType\": \"D\",\n        \"valFirstName\": \"manuel\",\n        \"valMiddleName\": \"\",\n        \"valLastName\": \"hurtado\",\n        \"valMiddleLastName\": \"\",\n        \"valGender\": \"M\",\n        \"dateOfBirth\": \"19900101\",\n        \"age\": null,\n        \"valBirthPlace\": \"76001\",\n        \"valPhone\": \"3166331111\",\n        \"valMobile\": \"3166331111\",\n        \"valEmail\": \"notengo@gmail.com\",\n        \"valNationality\": \"CO\",\n        \"valCountry\": null,\n        \"valState\": null,\n        \"valCity\": null,\n        \"valCurrentLocationZIP\": null,\n        \"valResidencePlace\": \"76001\",\n        \"valAddress\": \"KR 3  No. 1-2\",\n        \"codState\": null,\n        \"codMobileCountry\": null,\n        \"valSMSFlag\": null,\n        \"valEstratum\": null,\n        \"countryName\": null,\n        \"desCity\": null,\n        \"phoneCityCode\": null,\n        \"phoneCountryCode\": null,\n        \"valMaritalStatus\": null,\n        \"codTypeCustomer\": null,\n        \"valOccupation\": \"\",\n        \"valOcupationLevel\": \"\",\n        \"valJob\": \"\",\n        \"codEconomicActivity\": \"\",\n        \"valIncome\": null,\n        \"valExpenses\": null,\n        \"valOtherIncome\": null,\n        \"valAssets\": null,\n        \"valPassive\": null,\n        \"codDestinationOfFundsEconomic\": null,\n        \"valOtherIncomeDescription\": null,\n        \"valCompanyName\": null,\n        \"valCompanyAddress\": null,\n        \"valCompanyPhone\": null,\n        \"valCompanyFax\": null,\n        \"valCompanyCity\": null,\n        \"valComplianceComment\": null,\n        \"valDesirePrivacyPolicy\": null,\n        \"idCountryOfIssue\": null,\n        \"idExpiryDate\": null,\n        \"idIssueDate\": null,\n        \"valLocalDeliveryArea\": null,\n        \"valSentBy\": null,\n        \"valSharePersonalData\": null,\n        \"valSecondIDNo\": null,\n        \"valLinkingDate\": null,\n        \"valLinkingAgency\": null,\n        \"fecLastUpdate\": null,\n        \"fecEnroll\": null,\n        \"enrold\": false,\n        \"valPep\": null,\n        \"valCityWork\": null,\n        \"flagReceiver\": null,\n        \"foundsOrigin\": null,\n        \"havePhoneNumber\": \"Y\",\n        \"idIssue\": \"CO\",\n        \"doesIdExpire\": \"N\",\n        \"idIssueExpirationDate\": null,\n        \"countryOfBirth\": \"Colombia\",\n        \"ackFlag\": null\n      },\n      \"senderCompany\": null,\n      \"receiver\": {\n        \"id\": null,\n        \"codTypeIdentification\": null,\n        \"valNameType\": \"D\",\n        \"valFirstName\": \"hernan\",\n        \"valMiddleName\": \"\",\n        \"valLastName\": \"bolañoz\",\n        \"valMiddleLastName\": \"\",\n        \"valGender\": null,\n        \"dateOfBirth\": null,\n        \"age\": null,\n        \"valBirthPlace\": null,\n        \"valPhone\": null,\n        \"valMobile\": null,\n        \"valEmail\": null,\n        \"valNationality\": null,\n        \"valCountry\": \"MX\",\n        \"valState\": null,\n        \"valCity\": null,\n        \"valCurrentLocationZIP\": null,\n        \"valResidencePlace\": null,\n        \"valAddress\": null,\n        \"codState\": null,\n        \"codMobileCountry\": null,\n        \"valSMSFlag\": null,\n        \"valEstratum\": null,\n        \"countryName\": null,\n        \"desCity\": null,\n        \"phoneCityCode\": null,\n        \"phoneCountryCode\": null,\n        \"valMaritalStatus\": null,\n        \"codTypeCustomer\": null,\n        \"valOccupation\": null,\n        \"valOcupationLevel\": null,\n        \"valJob\": null,\n        \"codEconomicActivity\": null,\n        \"valIncome\": null,\n        \"valExpenses\": null,\n        \"valOtherIncome\": null,\n        \"valAssets\": null,\n        \"valPassive\": null,\n        \"codDestinationOfFundsEconomic\": null,\n        \"valOtherIncomeDescription\": null,\n        \"valCompanyName\": null,\n        \"valCompanyAddress\": null,\n        \"valCompanyPhone\": null,\n        \"valCompanyFax\": null,\n        \"valCompanyCity\": null,\n        \"valComplianceComment\": null,\n        \"valDesirePrivacyPolicy\": null,\n        \"idCountryOfIssue\": null,\n        \"idExpiryDate\": null,\n        \"idIssueDate\": null,\n        \"valLocalDeliveryArea\": null,\n        \"valSentBy\": null,\n        \"valSharePersonalData\": null,\n        \"valSecondIDNo\": null,\n        \"valLinkingDate\": null,\n        \"valLinkingAgency\": null,\n        \"fecLastUpdate\": null,\n        \"fecEnroll\": null,\n        \"enrold\": null,\n        \"valPep\": null,\n        \"valCityWork\": null,\n        \"flagReceiver\": null,\n        \"foundsOrigin\": null,\n        \"havePhoneNumber\": null,\n        \"idIssue\": null,\n        \"doesIdExpire\": null,\n        \"idIssueExpirationDate\": null,\n        \"countryOfBirth\": null,\n        \"ackFlag\": null\n      },\n      \"receiverCompany\": null,\n      \"moneyTransferMessage\": null,\n      \"promotions\": {\n        \"aspplyDiscountForPromo\": null,\n        \"couponPromotions\": null,\n        \"promoCodeDescription\": null,\n        \"promoDiscountAmount\": null,\n        \"promoMessage\": null,\n        \"promoName\": null,\n        \"promoSequenceNo\": null,\n        \"promoText\": null,\n        \"promotionDescription\": null,\n        \"promotionError\": null,\n        \"redemptionType\": null,\n        \"redemptionValue\": null,\n        \"senderPromoCode\": null\n      },\n      \"pin\": \"302870\",\n      \"token\": null,\n      \"phase\": \"RELEASE\",\n      \"ioCity\": null,\n      \"evidentCode\": null,\n      \"evidentResult\": null,\n      \"protectedMTCN\": null,\n      \"pinLife\": null,\n      \"quickPayCompany\": null\n    },\n    \"representative\": null,\n    \"valueAdditionalServicesCOPGYF\": \"0\",\n    \"promotionsGYF\": null,\n    \"promoDiscountAmount\": \"0\",\n    \"tcrmrate\": 0\n  },\n  \"ipAddress\": \"10.10.10.10\",\n  \"codROI\": \"ROI1: No Genera ROI\",\n  \"fingerImage\": \"base64String\",\n  \"fingerIndex\": \"1\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{girosApiUrl}}/unifierSAFApi/sendMoneyTransactionSAF",
              "host": ["{{girosApiUrl}}"],
              "path": ["unifierSAFApi", "sendMoneyTransactionSAF"]
            }
          },
          "response": []
        },
        {
          "name": "payMoneyTransactionSAF",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contextTransaction\": {\n    \"idTx\": \"646c296e-22bb-4187-b22f-27d603b38ec0\",\n    \"idUser\": \"JCORONADO\",\n    \"idConsumer\": \"APPSAF\",\n    \"idService\": \"APPSAF\",\n    \"codTypeTx\": \"PGI_SAF\"\n  },\n  \"agent\": {\n    \"id\": \"GYF001\",\n    \"office\": {\n      \"id\": \"274\",\n      \"servicePoint\": {\n        \"id\": \"274\",\n        \"device\": {\n          \"id\": \"1\"\n        }\n      }\n    }\n  },\n  \"payment\": {\n    \"valPay\": 380978,\n    \"valGMF\": 0,\n    \"valueAfterTax\": 380978,\n    \"valNumeralExchange\": \"1809\",\n    \"moneyTransfers\": {\n      \"moneyTransfer\": [\n        {\n          \"expectedPayoutLocationStateCode\": null,\n          \"tolls\": null,\n          \"fixOnSend\": null,\n          \"messageCharge\": null,\n          \"originatorsPrincipalAmount\": null,\n          \"paymentType\": null,\n          \"phoneDeliveryAvailable\": null,\n          \"testQuestionAvailable\": null,\n          \"transactionType\": null,\n          \"codeDeliveryService\": null,\n          \"destinationPrincipalAmount\": null,\n          \"expectedPayoutLocationCity\": null,\n          \"canadianDollarExchangeFee\": null,\n          \"valAcknowledgeFlag\": null,\n          \"valAddAgentDefinedData\": [],\n          \"valAddCheckAmount\": null,\n          \"valAddCheckCashedFlag\": null,\n          \"valAddCheckNo\": null,\n          \"valAddComplianceDataBuffer\": null,\n          \"valAddComplianceFlagBuffer\": null,\n          \"valAddMessage\": null,\n          \"valAddressvalIdatedByAgent\": null,\n          \"valAddressVerificationDocumentIssueDate\": null,\n          \"valAdntlPayeeInfoBuff\": null,\n          \"valAnswer\": null,\n          \"valArizonaOperatorFirstName\": null,\n          \"valArizonaOperatorLastName\": null,\n          \"valArizonaOperatorMaternalName\": null,\n          \"valArizonaOperatorPaternalName\": null,\n          \"valComplianceDataBuffer\": null,\n          \"valComplianceFlagBuffer\": null,\n          \"valCountryOfResidence\": null,\n          \"valCountyTax\": null,\n          \"valCurrentFX\": null,\n          \"codCustomerTypeAlpha\": null,\n          \"codCustomerTypeNumeric\": null,\n          \"valDestinationCountry\": \"CO\",\n          \"valDestinationState\": null,\n          \"valDestinationCity\": null,\n          \"codDestinationCurrency\": \"COP\",\n          \"valComplianceComment\": null,\n          \"valDestinationCurrency\": null,\n          \"valNumeralExchange\": null,\n          \"valPaidDateTime\": null,\n          \"valPayAmount\": null,\n          \"valRateExchange\": \"3809.775\",\n          \"valTaxWorksheet\": null,\n          \"valExpectedActualPayout\": \"380978\",\n          \"valFathersName\": null,\n          \"dateFiling\": \"\",\n          \"timeFiling\": \"\",\n          \"codFiscal\": null,\n          \"valFormSerialNumber\": null,\n          \"valHasId\": null,\n          \"valHasPhoneNumber\": null,\n          \"descId\": null,\n          \"descIdType\": null,\n          \"valIdPlaceOfIssue\": null,\n          \"valLocation\": null,\n          \"valLoyaltyCardUpdateIndicator\": null,\n          \"idMTCN\": \"2269098046\",\n          \"valMemberOrAssociateToGovernment\": null,\n          \"valMessage\": \"\",\n          \"valMoneyTransferCategory\": null,\n          \"idMoneyTransferKey\": \"2269098046\",\n          \"valMunicipalTax\": null,\n          \"valNewMTCN\": \"2269098046\",\n          \"valNorwegian\": null,\n          \"valNumberMatches\": null,\n          \"valNumberMessageLines\": null,\n          \"valOperatorComment\": null,\n          \"valOriginalDestinationCountry\": null,\n          \"valOriginalDestinationCurrency\": \"USD\",\n          \"valOriginatingCityLocale\": \"ATLANTAGA3\",\n          \"valOriginatingCountry\": \"US\",\n          \"valOriginatingState\": null,\n          \"codOriginatingCurrency\": null,\n          \"valPayIndicator\": \"P\",\n          \"descPayStatus\": \"\",\n          \"valPayWithoutIDIndicator\": null,\n          \"valPayoutCountry\": null,\n          \"valPayoutCurrency\": \"COP\",\n          \"valPlaceOfBirth\": null,\n          \"valPlusCharges\": null,\n          \"valPreferredCustomerNo\": null,\n          \"valPrincipal\": \"100\",\n          \"valPromoMessageSet1\": null,\n          \"valPromotionDiscountAmount\": null,\n          \"valPromotionName\": null,\n          \"valPromotionSequenceNo\": null,\n          \"valProofOfEUCitizenship\": null,\n          \"valReasonForAlternativeID\": null,\n          \"valReceiverSMSFlag\": null,\n          \"valRemittanceTradeRelated\": null,\n          \"valReprintFlag\": null,\n          \"valResidentOfOriginCountry\": null,\n          \"valSearchParametersBuffer\": null,\n          \"valSecondIDCountryOfIssue\": null,\n          \"valSecondIDType\": null,\n          \"valSenderSMSFlag\": null,\n          \"valSourceIPAddress\": null,\n          \"valSourceIPPort\": null,\n          \"valSourceOfFunds\": null,\n          \"valStateTax\": null,\n          \"valTemplateID\": null,\n          \"valTestQuestion\": null,\n          \"valTestQuestionResponse\": null,\n          \"valThirdIdNumber\": null,\n          \"valThirdPartyAmount\": null,\n          \"valThirdPartyCity\": null,\n          \"valThirdPartyCompanyName\": null,\n          \"valThirdPartyCountry\": null,\n          \"valThirdPartyFX\": null,\n          \"valThirdPartyFirstName\": null,\n          \"valThirdPartyFlagPay\": null,\n          \"valThirdPartyID\": null,\n          \"valThirdPartyIDCountryOfIssue\": null,\n          \"valThirdPartyIDType\": null,\n          \"valTransactionReason\": null,\n          \"valValutaAmount\": null,\n          \"codValuta\": null,\n          \"valWasResidentPermitProvided\": null,\n          \"valGross\": \"\",\n          \"valCharges\": \"\",\n          \"valChargesBuffer\": null,\n          \"valMISCBuffer\": null,\n          \"valForeignExchangeRate\": null,\n          \"valForeignSystemReferenceNo\": \"2005200651133\",\n          \"thirdPartySender\": null,\n          \"sender\": {\n            \"id\": null,\n            \"codTypeIdentification\": null,\n            \"valNameType\": null,\n            \"valFirstName\": \"JANNINA\",\n            \"valMiddleName\": \"\",\n            \"valLastName\": \"MORALES\",\n            \"valMiddleLastName\": \"\",\n            \"valGender\": null,\n            \"dateOfBirth\": null,\n            \"age\": null,\n            \"valBirthPlace\": null,\n            \"valPhone\": null,\n            \"valMobile\": null,\n            \"valEmail\": null,\n            \"valNationality\": null,\n            \"valCountry\": null,\n            \"valState\": \"FL\",\n            \"valCity\": null,\n            \"valCurrentLocationZIP\": null,\n            \"valResidencePlace\": null,\n            \"valAddress\": null,\n            \"codState\": null,\n            \"codMobileCountry\": null,\n            \"valSMSFlag\": null,\n            \"valEstratum\": null,\n            \"countryName\": null,\n            \"desCity\": null,\n            \"phoneCityCode\": null,\n            \"phoneCountryCode\": null,\n            \"valMaritalStatus\": null,\n            \"codTypeCustomer\": null,\n            \"valOccupation\": null,\n            \"valOcupationLevel\": null,\n            \"valJob\": null,\n            \"codEconomicActivity\": null,\n            \"valIncome\": null,\n            \"valExpenses\": null,\n            \"valOtherIncome\": null,\n            \"valAssets\": null,\n            \"valPassive\": null,\n            \"codDestinationOfFundsEconomic\": null,\n            \"valOtherIncomeDescription\": null,\n            \"valCompanyName\": null,\n            \"valCompanyAddress\": null,\n            \"valCompanyPhone\": null,\n            \"valCompanyFax\": null,\n            \"valCompanyCity\": null,\n            \"valComplianceComment\": null,\n            \"valDesirePrivacyPolicy\": null,\n            \"idCountryOfIssue\": null,\n            \"idExpiryDate\": null,\n            \"idIssueDate\": null,\n            \"valLocalDeliveryArea\": null,\n            \"valSentBy\": null,\n            \"valSharePersonalData\": null,\n            \"valSecondIDNo\": null,\n            \"valLinkingDate\": null,\n            \"valLinkingAgency\": null,\n            \"fecLastUpdate\": null,\n            \"fecEnroll\": null,\n            \"enrold\": null,\n            \"valPep\": null,\n            \"valCityWork\": null,\n            \"flagReceiver\": null,\n            \"foundsOrigin\": null,\n            \"havePhoneNumber\": null,\n            \"idIssue\": null,\n            \"doesIdExpire\": null,\n            \"idIssueExpirationDate\": null,\n            \"countryOfBirth\": null,\n            \"ackFlag\": null\n          },\n          \"senderCompany\": null,\n          \"receiver\": {\n            \"id\": \"1111245045\",\n            \"codTypeIdentification\": \"CC\",\n            \"valNameType\": null,\n            \"valFirstName\": \"Anderson\",\n            \"valMiddleName\": \"\",\n            \"valLastName\": \"trujillo\",\n            \"valMiddleLastName\": \"\",\n            \"valGender\": \"M\",\n            \"dateOfBirth\": \"19900101\",\n            \"age\": null,\n            \"valBirthPlace\": \"76001\",\n            \"valPhone\": \"3166331111\",\n            \"valMobile\": \"3166331111\",\n            \"valEmail\": null,\n            \"valNationality\": \"CO\",\n            \"valCountry\": null,\n            \"valState\": null,\n            \"valCity\": null,\n            \"valCurrentLocationZIP\": null,\n            \"valResidencePlace\": \"76001\",\n            \"valAddress\": \"CL 3 Sur No. 2-3\",\n            \"codState\": null,\n            \"codMobileCountry\": null,\n            \"valSMSFlag\": null,\n            \"valEstratum\": null,\n            \"countryName\": null,\n            \"desCity\": null,\n            \"phoneCityCode\": null,\n            \"phoneCountryCode\": null,\n            \"valMaritalStatus\": null,\n            \"codTypeCustomer\": null,\n            \"valOccupation\": \"\",\n            \"valOcupationLevel\": null,\n            \"valJob\": \"\",\n            \"codEconomicActivity\": \"\",\n            \"valIncome\": null,\n            \"valExpenses\": null,\n            \"valOtherIncome\": null,\n            \"valAssets\": null,\n            \"valPassive\": null,\n            \"codDestinationOfFundsEconomic\": null,\n            \"valOtherIncomeDescription\": null,\n            \"valCompanyName\": null,\n            \"valCompanyAddress\": null,\n            \"valCompanyPhone\": null,\n            \"valCompanyFax\": null,\n            \"valCompanyCity\": null,\n            \"valComplianceComment\": null,\n            \"valDesirePrivacyPolicy\": null,\n            \"idCountryOfIssue\": null,\n            \"idExpiryDate\": null,\n            \"idIssueDate\": null,\n            \"valLocalDeliveryArea\": null,\n            \"valSentBy\": null,\n            \"valSharePersonalData\": null,\n            \"valSecondIDNo\": null,\n            \"valLinkingDate\": null,\n            \"valLinkingAgency\": null,\n            \"fecLastUpdate\": null,\n            \"fecEnroll\": null,\n            \"enrold\": false,\n            \"valPep\": null,\n            \"valCityWork\": null,\n            \"flagReceiver\": null,\n            \"foundsOrigin\": null,\n            \"havePhoneNumber\": \"Y\",\n            \"idIssue\": \"CO\",\n            \"doesIdExpire\": \"N\",\n            \"idIssueExpirationDate\": null,\n            \"countryOfBirth\": \"Colombia\",\n            \"ackFlag\": null\n          },\n          \"receiverCompany\": null,\n          \"moneyTransferMessage\": null,\n          \"promotions\": null,\n          \"pin\": \"361773\",\n          \"token\": null,\n          \"phase\": \"RELEASE\",\n          \"ioCity\": null,\n          \"evidentCode\": null,\n          \"evidentResult\": null,\n          \"protectedMTCN\": null,\n          \"pinLife\": null,\n          \"quickPayCompany\": null\n        }\n      ]\n    },\n    \"customer\": {\n      \"id\": \"1111245045\",\n      \"codTypeIdentification\": \"CC\",\n      \"valNameType\": null,\n      \"valFirstName\": \"Anderson\",\n      \"valMiddleName\": \"\",\n      \"valLastName\": \"trujillo\",\n      \"valMiddleLastName\": \"\",\n      \"valGender\": \"M\",\n      \"dateOfBirth\": \"19900101\",\n      \"age\": null,\n      \"valBirthPlace\": \"76001\",\n      \"valPhone\": \"3166331111\",\n      \"valMobile\": \"3166331111\",\n      \"valEmail\": null,\n      \"valNationality\": \"CO\",\n      \"valCountry\": null,\n      \"valState\": null,\n      \"valCity\": null,\n      \"valCurrentLocationZIP\": null,\n      \"valResidencePlace\": \"76001\",\n      \"valAddress\": \"CL 3 Sur No. 2-3\",\n      \"codState\": null,\n      \"codMobileCountry\": null,\n      \"valSMSFlag\": null,\n      \"valEstratum\": null,\n      \"countryName\": null,\n      \"desCity\": null,\n      \"phoneCityCode\": null,\n      \"phoneCountryCode\": null,\n      \"valMaritalStatus\": null,\n      \"codTypeCustomer\": null,\n      \"valOccupation\": \"\",\n      \"valOcupationLevel\": null,\n      \"valJob\": \"\",\n      \"codEconomicActivity\": \"\",\n      \"valIncome\": null,\n      \"valExpenses\": null,\n      \"valOtherIncome\": null,\n      \"valAssets\": null,\n      \"valPassive\": null,\n      \"codDestinationOfFundsEconomic\": null,\n      \"valOtherIncomeDescription\": null,\n      \"valCompanyName\": null,\n      \"valCompanyAddress\": null,\n      \"valCompanyPhone\": null,\n      \"valCompanyFax\": null,\n      \"valCompanyCity\": null,\n      \"valComplianceComment\": null,\n      \"valDesirePrivacyPolicy\": null,\n      \"idCountryOfIssue\": null,\n      \"idExpiryDate\": null,\n      \"idIssueDate\": null,\n      \"valLocalDeliveryArea\": null,\n      \"valSentBy\": null,\n      \"valSharePersonalData\": null,\n      \"valSecondIDNo\": null,\n      \"valLinkingDate\": null,\n      \"valLinkingAgency\": null,\n      \"fecLastUpdate\": null,\n      \"fecEnroll\": null,\n      \"enrold\": false,\n      \"valPep\": null,\n      \"valCityWork\": null,\n      \"flagReceiver\": null,\n      \"foundsOrigin\": null,\n      \"havePhoneNumber\": \"Y\",\n      \"idIssue\": \"CO\",\n      \"doesIdExpire\": \"N\",\n      \"idIssueExpirationDate\": null,\n      \"countryOfBirth\": \"Colombia\",\n      \"ackFlag\": null\n    },\n    \"customerCompany\": null,\n    \"valRateExchange\": 3809.78,\n    \"valBroker\": \"2\",\n    \"valTransactionDate\": null,\n    \"valFundsTarget\": null,\n    \"valUSD\": \"100\",\n    \"cashValueCOP\": 380978,\n    \"cashValueUSD\": 100\n  },\n  \"methodOfPayment\": {\n    \"cash\": [\n      {\n        \"code\": \"EFE\",\n        \"valTotalValue\": \"1000\",\n        \"valNetValue\": \"100\",\n        \"currencyCode\": \"COP\"\n      }\n    ]\n  },\n  \"fingerImage\": \"base64String\",\n  \"codROI\": \"ROI1: No Genera ROI\",\n  \"descROI\": null,\n  \"fingerIndex\": \"1\",\n  \"ipAddress\": \"10.10.10.10\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{girosApiUrl}}/unifierSAFApi/payMoneyTransactionSAF",
              "host": ["{{girosApiUrl}}"],
              "path": ["unifierSAFApi", "payMoneyTransactionSAF"]
            }
          },
          "response": []
        },
        {
          "name": "findTransactionSAF - send",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"contextTransaction\": {\n        \"idTx\": \"211a6e1d-2db1-40c8-b91e-adrianfind1\",\n        \"idUser\": \"JCORONADO\",\n        \"idConsumer\": \"APPSAF\",\n        \"idService\": \"APPSAF\",\n        \"codTypeTx\": \"SAF\"\n    },\n    \"agent\": {\n        \"id\": \"GYF001\",\n        \"office\": {\n            \"id\": \"274\",\n            \"servicePoint\": {\n                \"id\": \"274\",\n                \"device\": {\n                    \"id\": \"1\"\n                }\n            }\n        }\n    },\n    \"customer\": {\n        \"id\": \"1166448899\", \n        \"typeIdentification\": \"CC\"\n    },\n    \"moneyTransfer\": {\n        \"pin\": \"s229260\",\n        \"phase\": \"RELEASE\"\n    },\n    \"ipAddress\": \"10.10.10.10\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{girosApiUrl}}/unifierSAFApi/findTransactionSAF",
              "host": ["{{girosApiUrl}}"],
              "path": ["unifierSAFApi", "findTransactionSAF"]
            }
          },
          "response": []
        }
      ],
      "description": "Giros y financas API"
    },
    {
      "name": "Get Minka access token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "",
              "pm.environment.set(\"minka-accessToken\", jsonData.access_token);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          },
          {
            "key": "x-api-key",
            "value": "{{minka-apiKey}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "client_id",
              "value": "{{minka-clientId}}",
              "type": "text"
            },
            {
              "key": "client_secret",
              "value": "{{minka-clientSecret}}",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{url}}/oauth/token",
          "host": ["{{url}}"],
          "path": ["oauth", "token"]
        }
      },
      "response": []
    },
    {
      "name": "Get merchant access token",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = pm.response.json();",
              "",
              "pm.environment.set(\"merchantAccessToken\", jsonData.access_token);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          },
          {
            "key": "x-api-key",
            "value": "{{merchantClientApiKey}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "client_id",
              "value": "{{merchantClientId}}",
              "type": "text"
            },
            {
              "key": "client_secret",
              "value": "{{merchantClientSecret}}",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{url}}/oauth/token",
          "host": ["{{url}}"],
          "path": ["oauth", "token"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ]
}
